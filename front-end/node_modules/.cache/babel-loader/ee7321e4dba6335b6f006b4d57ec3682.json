{"ast":null,"code":"import _slicedToArray from \"D:\\\\SkolaReact\\\\react-project\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"D:\\\\SkolaReact\\\\react-project\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\SkolaReact\\\\react-project\\\\front-end\\\\src\\\\Components\\\\Main\\\\Store.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport usernameget from '../testingStore';\n\nclass store extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      firstName: '',\n      lastName: ''\n    };\n  }\n\n  render() {\n    const initState = {\n      general: [{\n        from: 'Kalle',\n        msg: 'Hallå!!'\n      }],\n      topic2: [{\n        from: 'Stefan',\n        msg: 'Hej!!'\n      }]\n    };\n\n    function reducer(state, action) {\n      const _action$payload = action.payload,\n            from = _action$payload.from,\n            msg = _action$payload.msg,\n            topic = _action$payload.topic;\n\n      switch (action.type) {\n        case 'RECIEVE_MESSAGE':\n          return _objectSpread({}, state, {\n            [topic]: [...state[topic], {\n              from,\n              msg\n            }]\n          });\n\n        default:\n          return state;\n      }\n    }\n\n    let socket;\n\n    function sendChatAction(value) {\n      socket.emit('chat message', value);\n    }\n\n    if (!socket) {\n      socket = io(':3001');\n      socket.on('chat message', function (msg) {\n        dispatch({\n          type: 'RECIEVE_MESSAGE',\n          payload: msg\n        });\n      });\n    }\n\n    let user1 = usernameget.render;\n    console.log(user1);\n    const user = user1;\n\n    const _React$useReducer = React.useReducer(reducer, initState),\n          _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n          allChats = _React$useReducer2[0],\n          dispatch = _React$useReducer2[1];\n\n    return React.createElement(CTX.Provider, {\n      value: {\n        allChats,\n        sendChatAction,\n        user\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default store;\nexport const CTX = React.createContext();","map":{"version":3,"sources":["D:\\SkolaReact\\react-project\\front-end\\src\\Components\\Main\\Store.js"],"names":["React","io","axios","usernameget","store","Component","state","firstName","lastName","render","initState","general","from","msg","topic2","reducer","action","payload","topic","type","socket","sendChatAction","value","emit","on","dispatch","user1","console","log","user","useReducer","allChats","CTX","createContext"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;;AAEA,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AAAA;AAAA;AAAA,SAC/BC,KAD+B,GACvB;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,QAAQ,EAAE;AAFN,KADuB;AAAA;;AAKnCC,EAAAA,MAAM,GAAE;AAGR,UAAMC,SAAS,GAAG;AACdC,MAAAA,OAAO,EAAE,CACL;AAACC,QAAAA,IAAI,EAAE,OAAP;AAAgBC,QAAAA,GAAG,EAAE;AAArB,OADK,CADK;AAIdC,MAAAA,MAAM,EAAE,CACJ;AAACF,QAAAA,IAAI,EAAE,QAAP;AAAiBC,QAAAA,GAAG,EAAE;AAAtB,OADI;AAJM,KAAlB;;AAUA,aAASE,OAAT,CAAiBT,KAAjB,EAAwBU,MAAxB,EAA+B;AAAA,8BACAA,MAAM,CAACC,OADP;AAAA,YACpBL,IADoB,mBACpBA,IADoB;AAAA,YACdC,GADc,mBACdA,GADc;AAAA,YACTK,KADS,mBACTA,KADS;;AAE3B,cAAOF,MAAM,CAACG,IAAd;AACI,aAAK,iBAAL;AACI,mCACOb,KADP;AAEI,aAACY,KAAD,GAAS,CACL,GAAGZ,KAAK,CAACY,KAAD,CADH,EAEL;AAACN,cAAAA,IAAD;AAAMC,cAAAA;AAAN,aAFK;AAFb;;AAOJ;AACI,iBAAOP,KAAP;AAVR;AAYH;;AAED,QAAIc,MAAJ;;AAEA,aAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAC1BF,MAAAA,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BD,KAA5B;AACH;;AAIG,QAAI,CAACF,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAGnB,EAAE,CAAC,OAAD,CAAX;AACAmB,MAAAA,MAAM,CAACI,EAAP,CAAU,cAAV,EAA0B,UAAUX,GAAV,EAAe;AACrCY,QAAAA,QAAQ,CAAC;AAACN,UAAAA,IAAI,EAAE,iBAAP;AAA0BF,UAAAA,OAAO,EAAEJ;AAAnC,SAAD,CAAR;AACH,OAFD;AAGH;;AAGD,QAAIa,KAAK,GAAGvB,WAAW,CAACM,MAAxB;AACAkB,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMG,IAAI,GAAGH,KAAb;;AA/CI,8BAkDyB1B,KAAK,CAAC8B,UAAN,CAAiBf,OAAjB,EAA0BL,SAA1B,CAlDzB;AAAA;AAAA,UAkDGqB,QAlDH;AAAA,UAkDaN,QAlDb;;AAoDJ,WACI,oBAAC,GAAD,CAAK,QAAL;AAAc,MAAA,KAAK,EAAE;AAACM,QAAAA,QAAD;AAAWV,QAAAA,cAAX;AAA2BQ,QAAAA;AAA3B,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAQH;;AAjEkC;;AAkEnC,eAAezB,KAAf;AAEA,OAAO,MAAM4B,GAAG,GAAGhC,KAAK,CAACiC,aAAN,EAAZ","sourcesContent":["import React from 'react'\r\nimport io from 'socket.io-client'\r\nimport axios from 'axios'\r\nimport usernameget from '../testingStore'\r\n\r\nclass store extends React.Component{\r\n    state = {\r\n        firstName: '',\r\n        lastName: ''\r\n    };\r\nrender(){\r\n\r\n\r\nconst initState = {\r\n    general: [\r\n        {from: 'Kalle', msg: 'Hallå!!'},\r\n    ],\r\n    topic2: [\r\n        {from: 'Stefan', msg: 'Hej!!'},\r\n    ]\r\n}\r\n\r\n\r\nfunction reducer(state, action){\r\n    const {from, msg, topic} = action.payload;\r\n    switch(action.type) {\r\n        case 'RECIEVE_MESSAGE':\r\n            return{\r\n                ...state,\r\n                [topic]: [\r\n                    ...state[topic],\r\n                    {from,msg}\r\n                ]\r\n             }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nlet socket;\r\n\r\nfunction sendChatAction(value){\r\n    socket.emit('chat message', value);\r\n}\r\n\r\n\r\n\r\n    if (!socket) {\r\n        socket = io(':3001');\r\n        socket.on('chat message', function (msg) {\r\n            dispatch({type: 'RECIEVE_MESSAGE', payload: msg});\r\n        });\r\n    }\r\n\r\n\r\n    let user1 = usernameget.render;\r\n    console.log(user1)\r\n    const user = user1\r\n\r\n\r\n    const [allChats, dispatch] = React.useReducer(reducer, initState)\r\n\r\n    return (\r\n        <CTX.Provider value={{allChats, sendChatAction, user}}>\r\n            \r\n        </CTX.Provider>\r\n\r\n\r\n    )\r\n\r\n}}\r\nexport default store\r\n\r\nexport const CTX = React.createContext();"]},"metadata":{},"sourceType":"module"}