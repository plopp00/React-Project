{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\99nihmuj\\\\Desktop\\\\Reactprojekt\\\\react-project\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\99nihmuj\\\\Desktop\\\\Reactprojekt\\\\react-project\\\\front-end\\\\src\\\\Components\\\\Main\\\\Dashboard.js\";\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Store from './Store';\nimport { CTX } from './Store';\nconst useStyle = makeStyles(theme => ({\n  root: {\n    margin: '50px',\n    padding: theme.spacing(3, 2),\n    textAlign: \"center\"\n  },\n  flex: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  topicsWindow: {\n    width: '30%',\n    height: '300px',\n    borderRight: '1px solid grey'\n  },\n  chatWindow: {\n    width: '70',\n    height: '300px',\n    padding: '20px'\n  },\n  chatBox: {\n    width: '85%'\n  },\n  button: {\n    width: '15%'\n  }\n}));\nexport function Dashboard() {\n  const classes = useStyle(); //CTX store\n\n  const _React$useContext = React.useContext(CTX),\n        _React$useContext2 = _slicedToArray(_React$useContext, 1),\n        allChats = _React$useContext2[0];\n\n  console.log({\n    allChats\n  });\n  const topic = Object.keys(allChats);\n\n  const _React$useState = React.useState(topic[0]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        activeTopic = _React$useState2[0],\n        changeActiveTopic = _React$useState2[1];\n\n  const _React$useState3 = React.useState(''),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        textValue = _React$useState4[0],\n        changeTextValue = _React$useState4[1];\n\n  return React.createElement(Store, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h4\",\n    component: \"h4\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"imBored\"), React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, activeTopic), React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.topicsWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, topic.map(topic => React.createElement(ListItem, {\n    key: topic,\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: topic,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }))))), React.createElement(\"div\", {\n    className: classes.chatWindow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, [{\n    from: 'user',\n    msg: 'Hello'\n  }].map((chat, i) => React.createElement(\"div\", {\n    className: classes.flex,\n    key: i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Chip, {\n    label: chat.from,\n    className: classes.chip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(Typography, {\n    variant: \"body1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, chat.msg))))), React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    label: \"Send a message\",\n    className: classes.chatBox,\n    value: textValue,\n    onChange: e => changeTextValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Send\"))));\n}","map":{"version":3,"sources":["C:\\Users\\99nihmuj\\Desktop\\Reactprojekt\\react-project\\front-end\\src\\Components\\Main\\Dashboard.js"],"names":["React","Paper","Typography","makeStyles","List","ListItem","ListItemText","Chip","Button","TextField","Store","CTX","useStyle","theme","root","margin","padding","spacing","textAlign","flex","display","alignItems","topicsWindow","width","height","borderRight","chatWindow","chatBox","button","Dashboard","classes","useContext","allChats","console","log","topic","Object","keys","useState","activeTopic","changeActiveTopic","textValue","changeTextValue","map","from","msg","chat","i","chip","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAAQC,GAAR,QAAmB,SAAnB;AAEA,MAAMC,QAAQ,GAAGT,UAAU,CAACU,KAAK,KAAK;AACtCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,MAAM,EAAE,MADN;AAEFC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,EAAgB,CAAhB,CAFP;AAGFC,IAAAA,SAAS,EAAE;AAHT,GADgC;AAMtCC,EAAAA,IAAI,EAAE;AACFC,IAAAA,OAAO,EAAE,MADP;AAEFC,IAAAA,UAAU,EAAC;AAFT,GANgC;AAUtCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,KADG;AAEVC,IAAAA,MAAM,EAAE,OAFE;AAGVC,IAAAA,WAAW,EAAE;AAHH,GAVwB;AAetCC,EAAAA,UAAU,EAAE;AACRH,IAAAA,KAAK,EAAE,IADC;AAERC,IAAAA,MAAM,EAAE,OAFA;AAGRR,IAAAA,OAAO,EAAE;AAHD,GAf0B;AAoBtCW,EAAAA,OAAO,EAAC;AACJJ,IAAAA,KAAK,EAAE;AADH,GApB8B;AAuBtCK,EAAAA,MAAM,EAAE;AACJL,IAAAA,KAAK,EAAE;AADH;AAvB8B,CAAL,CAAN,CAA3B;AAiCA,OAAO,SAASM,SAAT,GAAqB;AACxB,QAAOC,OAAO,GAAGlB,QAAQ,EAAzB,CADwB,CAGxB;;AAHwB,4BAINZ,KAAK,CAAC+B,UAAN,CAAiBpB,GAAjB,CAJM;AAAA;AAAA,QAIlBqB,QAJkB;;AAMxBC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACF,IAAAA;AAAD,GAAZ;AAEA,QAAMG,KAAK,GAAGC,MAAM,CAACC,IAAP,CAAYL,QAAZ,CAAd;;AARwB,0BAUehC,KAAK,CAACsC,QAAN,CAAeH,KAAK,CAAC,CAAD,CAApB,CAVf;AAAA;AAAA,QAUlBI,WAVkB;AAAA,QAUNC,iBAVM;;AAAA,2BAYYxC,KAAK,CAACsC,QAAN,CAAe,EAAf,CAZZ;AAAA;AAAA,QAYlBG,SAZkB;AAAA,QAYPC,eAZO;;AAexB,SACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAEZ,OAAO,CAAChB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,SAAS,EAAC,IAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAII,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAwB,IAAA,SAAS,EAAC,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCyB,WADD,CAJJ,EAOI;AAAK,IAAA,SAAS,EAAET,OAAO,CAACX,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAEW,OAAO,CAACR,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQa,KAAK,CAACQ,GAAN,CAAUR,KAAK,IACX,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,KAAf;AAAsB,IAAA,MAAM,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CAFR,CADJ,CADJ,EAaI;AAAK,IAAA,SAAS,EAAEL,OAAO,CAACJ,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,CAAC;AAACkB,IAAAA,IAAI,EAAE,MAAP;AAAeC,IAAAA,GAAG,EAAC;AAAnB,GAAD,EAA8BF,GAA9B,CAAkC,CAACG,IAAD,EAAOC,CAAP,KAC9B;AAAK,IAAA,SAAS,EAAEjB,OAAO,CAACX,IAAxB;AAA8B,IAAA,GAAG,EAAE4B,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,IAAI,CAACF,IAAlB;AAAwB,IAAA,SAAS,EAAEd,OAAO,CAACkB,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,YAAY,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CF,IAAI,CAACD,GAA/C,CAFJ,CADJ,CAFR,CAbJ,CAPJ,EA+BS;AAAK,IAAA,SAAS,EAAEf,OAAO,CAACX,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAC,gBADV;AAEI,IAAA,SAAS,EAAEW,OAAO,CAACH,OAFvB;AAGI,IAAA,KAAK,EAAEc,SAHX;AAII,IAAA,QAAQ,EAAEQ,CAAC,IAAIP,eAAe,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAJlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAA4C,IAAA,SAAS,EAAErB,OAAO,CAACF,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARA,CA/BT,CADA,CADJ;AAiDH","sourcesContent":["import React from 'react';\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText'; \r\nimport Chip from '@material-ui/core/Chip';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Store from './Store'\r\nimport {CTX } from './Store'\r\n\r\nconst useStyle = makeStyles(theme => ({\r\nroot: {\r\n    margin: '50px',\r\n    padding: theme.spacing(3,2),\r\n    textAlign: \"center\"\r\n},\r\nflex: {\r\n    display: 'flex',\r\n    alignItems:'center' \r\n},\r\ntopicsWindow: {\r\n    width: '30%',\r\n    height: '300px',\r\n    borderRight: '1px solid grey'\r\n},\r\nchatWindow: {\r\n    width: '70',\r\n    height: '300px',\r\n    padding: '20px'\r\n},\r\nchatBox:{\r\n    width: '85%'\r\n},\r\nbutton: {\r\n    width: '15%'\r\n}\r\n\r\n}))\r\n\r\n\r\n    \r\n\r\n\r\nexport function Dashboard() {\r\n    const  classes = useStyle();\r\n\r\n    //CTX store\r\n    const[allChats] = React.useContext(CTX);\r\n\r\n    console.log({allChats});\r\n\r\n    const topic = Object.keys(allChats);\r\n\r\n    const[activeTopic,changeActiveTopic] = React.useState(topic[0])\r\n\r\n    const[textValue, changeTextValue] = React.useState('');\r\n\r\n\r\n    return (\r\n        <Store>\r\n        <Paper className={classes.root}>\r\n            <Typography variant=\"h4\" component=\"h4\">\r\n                imBored\r\n            </Typography>\r\n            <Typography variant=\"h5\"component=\"h5\">\r\n            {activeTopic}\r\n            </Typography>\r\n            <div className={classes.flex}>\r\n                <div className={classes.topicsWindow}>\r\n                    <List>\r\n                        {\r\n                            topic.map(topic =>(\r\n                                <ListItem key={topic} button>\r\n                                    <ListItemText primary={topic} />\r\n                                </ListItem>\r\n                            ))\r\n                        }\r\n                    \r\n                    </List>\r\n                </div>\r\n                <div className={classes.chatWindow}>  \r\n                    {\r\n                        [{from: 'user', msg:'Hello'}].map((chat, i) =>(\r\n                            <div className={classes.flex} key={i}>\r\n                                <Chip label={chat.from} className={classes.chip} />\r\n                                <Typography variant='body1' gutterBottom>{chat.msg}</Typography>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n            </div>\r\n                 <div className={classes.flex}>\r\n                     <TextField\r\n                         label=\"Send a message\"\r\n                         className={classes.chatBox}\r\n                         value={textValue}\r\n                         onChange={e => changeTextValue(e.target.value)}\r\n                         \r\n                     />\r\n                 <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n                     Send\r\n                 </Button>\r\n            </div>\r\n        </Paper>\r\n        </Store>\r\n\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}