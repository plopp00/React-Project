{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\99vikrud\\\\Desktop\\\\RamverkReact\\\\react-project\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"C:\\\\Users\\\\99vikrud\\\\Desktop\\\\RamverkReact\\\\react-project\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Users\\\\99vikrud\\\\Desktop\\\\RamverkReact\\\\react-project\\\\front-end\\\\src\\\\Components\\\\Main\\\\Store.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nexport const CTX = React.createContext();\nconst initState = {\n  general: [{\n    from: 'Kalle',\n    msg: 'Hallå!!'\n  }],\n  topic2: [{\n    from: 'Stefan',\n    msg: 'Hej!!'\n  }]\n};\n\nconst getUserName = () => {\n  axios.get('http://localhost:3010/getname').then(function (response) {\n    console.log(\"inside then\"); // handle success\n\n    return response;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  }).finally(function () {// always executed\n  });\n};\n\nfunction reducer(state, action) {\n  const _action$payload = action.payload,\n        from = _action$payload.from,\n        msg = _action$payload.msg,\n        topic = _action$payload.topic;\n\n  switch (action.type) {\n    case 'RECIEVE_MESSAGE':\n      return _objectSpread({}, state, {\n        [topic]: [...state[topic], {\n          from,\n          msg\n        }]\n      });\n\n    default:\n      return state;\n  }\n}\n\nlet socket;\n\nfunction sendChatAction(value) {\n  socket.emit('chat message', value);\n}\n\nexport default function Store(props) {\n  if (!socket) {\n    socket = io(':3001');\n    socket.on('chat message', function (msg) {\n      dispatch({\n        type: 'RECIEVE_MESSAGE',\n        payload: msg\n      });\n    });\n  }\n\n  const user = getUserName();\n\n  const _React$useReducer = React.useReducer(reducer, initState),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        allChats = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  return React.createElement(CTX.Provider, {\n    value: {\n      allChats,\n      sendChatAction,\n      user\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, props.children);\n}","map":{"version":3,"sources":["C:\\Users\\99vikrud\\Desktop\\RamverkReact\\react-project\\front-end\\src\\Components\\Main\\Store.js"],"names":["React","io","axios","CTX","createContext","initState","general","from","msg","topic2","getUserName","get","then","response","console","log","catch","error","finally","reducer","state","action","payload","topic","type","socket","sendChatAction","value","emit","Store","props","on","dispatch","user","useReducer","allChats","children"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,GAAG,GAAGH,KAAK,CAACI,aAAN,EAAZ;AAEP,MAAMC,SAAS,GAAG;AACdC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,IAAI,EAAE,OAAP;AAAgBC,IAAAA,GAAG,EAAE;AAArB,GADK,CADK;AAIdC,EAAAA,MAAM,EAAE,CACJ;AAACF,IAAAA,IAAI,EAAE,QAAP;AAAiBC,IAAAA,GAAG,EAAE;AAAtB,GADI;AAJM,CAAlB;;AAQA,MAAME,WAAW,GAAG,MACpB;AACIR,EAAAA,KAAK,CAACS,GAAN,CAAU,+BAAV,EACKC,IADL,CACU,UAAUC,QAAV,EAAoB;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EADsB,CAEtB;;AACA,WAAQF,QAAR;AACH,GALL,EAMKG,KANL,CAMW,UAAUC,KAAV,EAAiB;AACpB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACH,GATL,EAUKC,OAVL,CAUa,YAAY,CACjB;AACH,GAZL;AAcH,CAhBD;;AAmBA,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAAA,0BACAA,MAAM,CAACC,OADP;AAAA,QACpBf,IADoB,mBACpBA,IADoB;AAAA,QACdC,GADc,mBACdA,GADc;AAAA,QACTe,KADS,mBACTA,KADS;;AAE3B,UAAOF,MAAM,CAACG,IAAd;AACI,SAAK,iBAAL;AACI,+BACOJ,KADP;AAEI,SAACG,KAAD,GAAS,CACL,GAAGH,KAAK,CAACG,KAAD,CADH,EAEL;AAAChB,UAAAA,IAAD;AAAMC,UAAAA;AAAN,SAFK;AAFb;;AAOJ;AACI,aAAOY,KAAP;AAVR;AAYH;;AAED,IAAIK,MAAJ;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAC1BF,EAAAA,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BD,KAA5B;AACH;;AAED,eAAe,SAASE,KAAT,CAAeC,KAAf,EAAsB;AAEjC,MAAI,CAACL,MAAL,EAAY;AACRA,IAAAA,MAAM,GAAGxB,EAAE,CAAC,OAAD,CAAX;AACAwB,IAAAA,MAAM,CAACM,EAAP,CAAU,cAAV,EAA0B,UAASvB,GAAT,EAAa;AACnCwB,MAAAA,QAAQ,CAAC;AAACR,QAAAA,IAAI,EAAC,iBAAN;AAAyBF,QAAAA,OAAO,EAAEd;AAAlC,OAAD,CAAR;AACH,KAFD;AAGH;;AAED,QAAMyB,IAAI,GAAGvB,WAAW,EAAxB;;AATiC,4BAWJV,KAAK,CAACkC,UAAN,CAAiBf,OAAjB,EAA0Bd,SAA1B,CAXI;AAAA;AAAA,QAW1B8B,QAX0B;AAAA,QAWhBH,QAXgB;;AAajC,SACI,oBAAC,GAAD,CAAK,QAAL;AAAc,IAAA,KAAK,EAAE;AAACG,MAAAA,QAAD;AAAWT,MAAAA,cAAX;AAA2BO,MAAAA;AAA3B,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACM,QADX,CADJ;AAKH","sourcesContent":["import React from 'react'\r\nimport io from 'socket.io-client'\r\nimport axios from 'axios'\r\n\r\nexport const CTX = React.createContext();\r\n\r\nconst initState = {\r\n    general: [\r\n        {from: 'Kalle', msg: 'Hallå!!'},\r\n    ],\r\n    topic2: [\r\n        {from: 'Stefan', msg: 'Hej!!'},\r\n    ]\r\n}\r\nconst getUserName = () =>\r\n{\r\n    axios.get('http://localhost:3010/getname')\r\n        .then(function (response) {\r\n            console.log(\"inside then\")\r\n            // handle success\r\n            return (response);\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n        })\r\n        .finally(function () {\r\n            // always executed\r\n        });\r\n\r\n}\r\n\r\n\r\nfunction reducer(state, action){\r\n    const {from, msg, topic} = action.payload;\r\n    switch(action.type) {\r\n        case 'RECIEVE_MESSAGE':\r\n            return{\r\n                ...state,\r\n                [topic]: [\r\n                    ...state[topic],\r\n                    {from,msg}\r\n                ]\r\n             }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nlet socket;\r\n\r\nfunction sendChatAction(value){\r\n    socket.emit('chat message', value);\r\n}\r\n\r\nexport default function Store(props) {\r\n\r\n    if (!socket){\r\n        socket = io(':3001');\r\n        socket.on('chat message', function(msg){\r\n            dispatch({type:'RECIEVE_MESSAGE', payload: msg});\r\n        });\r\n    }\r\n\r\n    const user = getUserName();\r\n\r\n    const [allChats, dispatch] = React.useReducer(reducer, initState)\r\n\r\n    return(\r\n        <CTX.Provider value={{allChats, sendChatAction, user}}>\r\n            {props.children}\r\n        </CTX.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}