{"ast":null,"code":"import _slicedToArray from \"D:\\\\SkolaReact\\\\react-project\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"D:\\\\SkolaReact\\\\react-project\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\SkolaReact\\\\react-project\\\\front-end\\\\src\\\\Components\\\\Main\\\\Store.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nexport const CTX = React.createContext();\n\nconst getUserName = () => {\n  return axios({\n    url: 'http://localhost:3010/getname',\n    method: 'get',\n    timeout: 8000,\n    header: {\n      'content-Type': 'application/json'\n    }\n  }).then(res => {\n    // handle success\n    return res.data;\n  }).catch(function (error) {\n    // handle error\n    console.log(error);\n  });\n};\n\nfunction reducer(state, action) {\n  const _action$payload = action.payload,\n        from = _action$payload.from,\n        msg = _action$payload.msg,\n        topic = _action$payload.topic;\n\n  switch (action.type) {\n    case 'RECIEVE_MESSAGE':\n      return _objectSpread({}, state, {\n        [topic]: [...state[topic], {\n          from,\n          msg\n        }]\n      });\n\n    default:\n      return state;\n  }\n}\n\nlet socket;\n\nfunction sendChatAction(value) {\n  socket.emit('chat message', value);\n}\n\nexport default function Store(props) {\n  const _React$useReducer = React.useReducer(reducer),\n        _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n        allChats = _React$useReducer2[0],\n        dispatch = _React$useReducer2[1];\n\n  if (!socket) {\n    socket = io(':3001');\n    socket.on('chat message', function (msg) {\n      dispatch({\n        type: 'RECIEVE_MESSAGE',\n        payload: msg\n      });\n    });\n  }\n\n  ;\n  return getUserName().then(function (res) {\n    const user = res.data;\n    return React.createElement(CTX.Provider, {\n      value: {\n        allChats,\n        sendChatAction,\n        user\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, props.children);\n  });\n}","map":{"version":3,"sources":["D:\\SkolaReact\\react-project\\front-end\\src\\Components\\Main\\Store.js"],"names":["React","io","axios","CTX","createContext","getUserName","url","method","timeout","header","then","res","data","catch","error","console","log","reducer","state","action","payload","from","msg","topic","type","socket","sendChatAction","value","emit","Store","props","useReducer","allChats","dispatch","on","user","children"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,GAAG,GAAGH,KAAK,CAACI,aAAN,EAAZ;;AAGP,MAAMC,WAAW,GAAG,MACpB;AAEI,SAASH,KAAK,CAAC;AACXI,IAAAA,GAAG,EAAE,+BADM;AAEXC,IAAAA,MAAM,EAAE,KAFG;AAGXC,IAAAA,OAAO,EAAE,IAHE;AAIXC,IAAAA,MAAM,EAAE;AACJ,sBAAgB;AADZ;AAJG,GAAD,CAAL,CASJC,IATI,CASCC,GAAG,IAAI;AACT;AACA,WAAOA,GAAG,CAACC,IAAX;AACX,GAZY,EAaJC,KAbI,CAaE,UAAUC,KAAV,EAAiB;AACpB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAhBI,CAAT;AAmBH,CAtBD;;AAyBA,SAASG,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAA+B;AAAA,0BACAA,MAAM,CAACC,OADP;AAAA,QACpBC,IADoB,mBACpBA,IADoB;AAAA,QACdC,GADc,mBACdA,GADc;AAAA,QACTC,KADS,mBACTA,KADS;;AAE3B,UAAOJ,MAAM,CAACK,IAAd;AACI,SAAK,iBAAL;AACI,+BACON,KADP;AAEI,SAACK,KAAD,GAAS,CACL,GAAGL,KAAK,CAACK,KAAD,CADH,EAEL;AAACF,UAAAA,IAAD;AAAMC,UAAAA;AAAN,SAFK;AAFb;;AAOJ;AACI,aAAOJ,KAAP;AAVR;AAYH;;AAED,IAAIO,MAAJ;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA8B;AAC1BF,EAAAA,MAAM,CAACG,IAAP,CAAY,cAAZ,EAA4BD,KAA5B;AACH;;AAED,eAAe,SAASE,KAAT,CAAeC,KAAf,EAAsB;AAAA,4BACJ9B,KAAK,CAAC+B,UAAN,CAAiBd,OAAjB,CADI;AAAA;AAAA,QAC1Be,QAD0B;AAAA,QAChBC,QADgB;;AAEjC,MAAI,CAACR,MAAL,EAAa;AACTA,IAAAA,MAAM,GAAGxB,EAAE,CAAC,OAAD,CAAX;AACAwB,IAAAA,MAAM,CAACS,EAAP,CAAU,cAAV,EAA0B,UAAUZ,GAAV,EAAe;AACrCW,MAAAA,QAAQ,CAAC;AAACT,QAAAA,IAAI,EAAE,iBAAP;AAA0BJ,QAAAA,OAAO,EAAEE;AAAnC,OAAD,CAAR;AACH,KAFD;AAEG;;AAAA;AACP,SAEHjB,WAAW,GAAGK,IAAd,CAAmB,UAAUC,GAAV,EAAe;AAE3B,UAAMwB,IAAI,GAAGxB,GAAG,CAACC,IAAjB;AAGC,WACI,oBAAC,GAAD,CAAK,QAAL;AAAc,MAAA,KAAK,EAAE;AAACoB,QAAAA,QAAD;AAAWN,QAAAA,cAAX;AAA2BS,QAAAA;AAA3B,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKL,KAAK,CAACM,QADX,CADJ;AAQP,GAbD,CAFG;AAiBH","sourcesContent":["import React from 'react'\r\nimport io from 'socket.io-client'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const CTX = React.createContext();\r\n\r\n\r\nconst getUserName = () =>\r\n{\r\n\r\n    return   axios({\r\n        url: 'http://localhost:3010/getname',\r\n        method: 'get',\r\n        timeout: 8000,\r\n        header: {\r\n            'content-Type': 'application/json',\r\n        }\r\n\r\n    })\r\n        .then(res => {\r\n            // handle success\r\n            return res.data\r\n})\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n        })\r\n\r\n\r\n}\r\n\r\n\r\nfunction reducer(state, action){\r\n    const {from, msg, topic} = action.payload;\r\n    switch(action.type) {\r\n        case 'RECIEVE_MESSAGE':\r\n            return{\r\n                ...state,\r\n                [topic]: [\r\n                    ...state[topic],\r\n                    {from,msg}\r\n                ]\r\n             }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nlet socket;\r\n\r\nfunction sendChatAction(value){\r\n    socket.emit('chat message', value);\r\n}\r\n\r\nexport default function Store(props) {\r\n    const [allChats, dispatch] = React.useReducer(reducer)\r\n    if (!socket) {\r\n        socket = io(':3001');\r\n        socket.on('chat message', function (msg) {\r\n            dispatch({type: 'RECIEVE_MESSAGE', payload: msg});\r\n        })};\r\n    return(\r\n\r\n getUserName().then(function (res) {\r\n\r\n        const user = res.data\r\n\r\n\r\n         return (\r\n             <CTX.Provider value={{allChats, sendChatAction, user}}>\r\n                 {props.children}\r\n             </CTX.Provider>\r\n         )\r\n\r\n\r\n\r\n })\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}